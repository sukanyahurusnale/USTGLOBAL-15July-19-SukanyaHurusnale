!SESSION 2019-09-21 11:56:39.589 -----------------------------------------------
eclipse.buildId=4.12.0.I20190605-1800
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.egit.core 1 0 2019-09-21 11:57:31.910
!MESSAGE Using Apache MINA sshd as ssh client.

!ENTRY org.eclipse.egit.ui 2 0 2019-09-21 11:58:09.115
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Sukanya'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.core.jobs 4 2 2019-09-21 12:37:44.982
!MESSAGE An internal error occurred during: "SonarLint processing file /HotelBilling/src/main/resource/META-INF/persistence.xml".
!STACK 0
java.lang.LinkageError: loader (instance of  org/sonar/classloader/ClassRealm): attempted  duplicate class definition for name: "org/apache/xerces/parsers/XIncludeAwareParserConfiguration"
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(Unknown Source)
	at java.security.SecureClassLoader.defineClass(Unknown Source)
	at java.net.URLClassLoader.defineClass(Unknown Source)
	at java.net.URLClassLoader.access$100(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(Unknown Source)
	at org.sonar.classloader.ClassRealm.loadClassFromSelf(ClassRealm.java:125)
	at org.sonar.classloader.ParentFirstStrategy.loadClass(ParentFirstStrategy.java:37)
	at org.sonar.classloader.ClassRealm.loadClass(ClassRealm.java:87)
	at org.sonar.classloader.ClassRealm.loadClass(ClassRealm.java:76)
	at org.apache.xerces.parsers.ObjectFactory.findProviderClass(Unknown Source)
	at org.apache.xerces.parsers.ObjectFactory.newInstance(Unknown Source)
	at org.apache.xerces.parsers.ObjectFactory.createObject(Unknown Source)
	at org.apache.xerces.parsers.ObjectFactory.createObject(Unknown Source)
	at org.apache.xerces.parsers.DOMParser.<init>(Unknown Source)
	at org.apache.xerces.parsers.DOMParser.<init>(Unknown Source)
	at org.apache.xerces.jaxp.DocumentBuilderImpl.<init>(Unknown Source)
	at org.apache.xerces.jaxp.DocumentBuilderImpl.<init>(Unknown Source)
	at org.apache.xerces.jaxp.DocumentBuilderFactoryImpl.setFeature(Unknown Source)
	at org.sonarsource.analyzer.commons.xml.SafetyFactory.createDocumentBuilder(SafetyFactory.java:58)
	at org.sonarsource.analyzer.commons.xml.XmlParser.<init>(XmlParser.java:62)
	at org.sonarsource.analyzer.commons.xml.XmlFile.create(XmlFile.java:90)
	at org.sonar.plugins.java.XmlFileSensor.scanFile(XmlFileSensor.java:99)
	at org.sonar.plugins.java.XmlFileSensor.execute(XmlFileSensor.java:83)
	at org.sonarsource.sonarlint.core.analyzer.sensor.SensorsExecutor.executeSensor(SensorsExecutor.java:81)
	at org.sonarsource.sonarlint.core.analyzer.sensor.SensorsExecutor.execute(SensorsExecutor.java:72)
	at org.sonarsource.sonarlint.core.container.analysis.AnalysisContainer.doAfterStart(AnalysisContainer.java:132)
	at org.sonarsource.sonarlint.core.container.ComponentContainer.startComponents(ComponentContainer.java:125)
	at org.sonarsource.sonarlint.core.container.ComponentContainer.execute(ComponentContainer.java:110)
	at org.sonarsource.sonarlint.core.container.standalone.StandaloneGlobalContainer.analyze(StandaloneGlobalContainer.java:147)
	at org.sonarsource.sonarlint.core.StandaloneSonarLintEngineImpl.analyze(StandaloneSonarLintEngineImpl.java:89)
	at org.sonarlint.eclipse.core.internal.jobs.StandaloneSonarLintEngineFacade.runAnalysis(StandaloneSonarLintEngineFacade.java:76)
	at org.sonarlint.eclipse.core.internal.jobs.AnalyzeStandaloneProjectJob.runAnalysis(AnalyzeStandaloneProjectJob.java:55)
	at org.sonarlint.eclipse.core.internal.jobs.AbstractAnalyzeProjectJob.run(AbstractAnalyzeProjectJob.java:397)
	at org.sonarlint.eclipse.core.internal.jobs.AbstractAnalyzeProjectJob.runAnalysisAndUpdateMarkers(AbstractAnalyzeProjectJob.java:205)
	at org.sonarlint.eclipse.core.internal.jobs.AbstractAnalyzeProjectJob.doRun(AbstractAnalyzeProjectJob.java:167)
	at org.sonarlint.eclipse.core.internal.jobs.AbstractSonarProjectJob.runInWorkspace(AbstractSonarProjectJob.java:44)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2019-09-21 15:03:17.964
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.ustglobal.hotelbilling.operation;

import java.sql.;
import java.sql.PreparedStatement;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;
import javax.persistence.Query;

import com.ustglobal.hotebilling.dao.HotelBillInterface;
import com.ustglobal.hotelbilling.beans.Hotel_Bill;

public class HotelOperation implements HotelBillInterface {
	InsertItem ii = new InsertItem();
	Hotel_Bill bill = new Hotel_Bill();

	public void showAllItems() {

		EntityManagerFactory entityManagerFactory = null;
		EntityManager entityManager = null;
		EntityTransaction transaction = null;
		Scanner sc = new Scanner(System.in);
		try {
			entityManagerFactory = Persistence.createEntityManagerFactory("TestPersistence");
			entityManager = entityManagerFactory.createEntityManager();
			transaction = entityManager.getTransaction();
			transaction.begin();

			String query = "from Hotel_Bill";
			Query query1 = entityManager.createQuery(query);
			List<Hotel_Bill> rs = query1.getResultList();

			for (Hotel_Bill hb : rs) {
				System.out.println("Item Code: " + hb.getItem_code());
				System.out.println("Item Food_Name: " + hb.getFood_name());
				System.out.println("Item Price: " + hb.getPrice());
				System.out.println("************************");
			}

		} catch (Exception e) {

			e.printStackTrace();
		} finally {
			entityManager.close();
		}
	}

	public void takeOrder() {

		EntityManagerFactory entityManagerFactory = null;
		EntityManager entityManager = null;
		EntityTransaction transaction = null;
		Scanner sc = new Scanner(System.in);
		try {
			entityManagerFactory = Persistence.createEntityManagerFactory("TestPersistence");
			entityManager = entityManagerFactory.createEntityManager();
			transaction = entityManager.getTransaction();
			transaction.begin();

			String query = "select food_name from Hotel_Bill where item_code=:item_code";
			Query query1 = entityManager.createQuery(query);

			System.out.println("enter item code");
			int item_code = sc.nextInt();

			query1.setParameter("item_code", item_code);

			List<String> rs = query1.getResultList();

			for (String hb : rs) {

				System.out.println("Item Food_Name: " + hb);

				System.out.println("************************");
			}

		} catch (Exception e) {

			e.printStackTrace();
		} finally {
			entityManager.close();
		}

	}

	public void operateOnFood() {

	}
	/*
	 * public void addFoodItem() {
	 * 
	 * EntityManagerFactory entityManagerFactory = null; EntityManager entityManager
	 * = null; EntityTransaction transaction = null; Scanner sc = new
	 * Scanner(System.in); try { entityManagerFactory =
	 * Persistence.createEntityManagerFactory("TestPersistence"); entityManager =
	 * entityManagerFactory.createEntityManager(); transaction =
	 * entityManager.getTransaction(); transaction.begin();
	 * 
	 * Hotel_Bill hb = new Hotel_Bill();
	 * 
	 * hb.setItem_code(104); hb.setFood_name("Dosa"); hb.setPrice(30);
	 * 
	 * Hotel_Bill hb1 = new Hotel_Bill(); hb1.setItem_code(105);
	 * hb1.setFood_name("Idli"); hb1.setPrice(50);
	 * 
	 * Hotel_Bill hb2 = new Hotel_Bill(); hb2.setItem_code(106);
	 * hb2.setFood_name("Samosa"); hb2.setPrice(10);
	 * 
	 * entityManager.persist(hb); entityManager.detach(hb);
	 * 
	 * entityManager.persist(hb1); entityManager.detach(hb);
	 * 
	 * entityManager.persist(hb2); entityManager.detach(hb);
	 * entityManager.merge(hb); entityManager.merge(hb1); entityManager.merge(hb2);
	 * 
	 * System.out.println("inserted"); System.out.println();
	 * 
	 * transaction.commit(); } catch (Exception e) {
	 * 
	 * e.printStackTrace(); } finally { entityManager.close(); }
	 * 
	 * 
	 * ii.inserItem(bill); System.out.println("saved");
	 * 
	 * 
	 * }
	 */
	
	public void addFoodItem() {
		Scanner sc = new Scanner(System.in);
		public static Connection conn = null;
		PreparedStatement ps = null;
		ResultSet res = null;
	
	try {

		Class.forName("com.mysql.jdbc.Driver");
		System.out.println("Driver Loaded...!");

		String dbUrl = "jdbc:mysql://localhost:3306/MusicPlayer";
		String filePath = "C:\\Users\\Sukanya\\Documents\\db.properties";

		FileReader reader = new FileReader(filePath);

		Properties prop = new Properties();
		prop.load(reader);

		conn = DriverManager.getConnection(dbUrl, prop);

		//String query = "insert into MusicFiles values(?,?,?,?,?,?)";
		
		String query=prop.getProperty("my.insert");
		ps = conn.prepareStatement(query);

		System.out.println("enter the Song_ID");
		ps.setInt(1, Integer.parseInt(sc.nextLine()));

		System.out.println("enter the Song_Title ");
		ps.setString(2, sc.nextLine());

		System.out.println("enter the Atrist_Name");
		ps.setString(3, sc.nextLine());

		System.out.println("enter the Album_Name");
		ps.setString(4, sc.nextLine());

		System.out.println("enter the Song_Location");
		ps.setString(5, sc.nextLine());

		System.out.println("enter the Description");
		ps.setString(6, sc.nextLine());
		
		int rs=ps.executeUpdate();

		// process the resultset via preparedstmnt
		if (rs > 0) {
			System.out.println("Query OK," + rs + " row affected");

		} else {
			System.out.println("someting went wrong");
		}
	

	} catch (Exception e) {

		e.printStackTrace();
	}
	
	}
	public void removeFoodItem() {

		EntityManagerFactory entityManagerFactory = null;
		EntityManager entityManager = null;
		EntityTransaction transaction = null;
		Scanner sc = new Scanner(System.in);
		try {
			entityManagerFactory = Persistence.createEntityManagerFactory("TestPersistence");
			entityManager = entityManagerFactory.createEntityManager();
			transaction = entityManager.getTransaction();
			transaction.begin();
			String query = " delete from Hotel_Bill where item_code=:item_code";
			Query query1 = entityManager.createQuery(query);
			System.out.println("enter item code");
			int item_code = sc.nextInt();
			query1.setParameter("item_code", item_code);
			int rs = query1.executeUpdate();
			if (rs > 0) {
				System.out.println("item removed" + rs);
			} else {
				System.out.println("something went wrong");
			}

		} catch (Exception e) {

			e.printStackTrace();
		} finally {
			entityManager.close();
		}

	}

	public void modifyFoodItem() {

		EntityManagerFactory entityManagerFactory = null;
		EntityManager entityManager = null;
		EntityTransaction transaction = null;
		Scanner sc = new Scanner(System.in);
		try {
			entityManagerFactory = Persistence.createEntityManagerFactory("TestPersistence");
			entityManager = entityManagerFactory.createEntityManager();
			transaction = entityManager.getTransaction();
			transaction.begin();
			String query = " update Hotel_Bill set food_name=:food_name where item_code=:item_code";
			Query query1 = entityManager.createQuery(query);

			System.out.println("enter new name of item");
			String name = sc.nextLine();

			System.out.println("enter item code");
			int code = sc.nextInt();

			query1.setParameter("item_name", name);
			query1.setParameter("item_code", code);

			int rs = query1.executeUpdate();
			if (rs > 0) {
				System.out.println("item upadated" + rs);
			} else {
				System.out.println("something went wrong");
			}

		} catch (Exception e) {

			e.printStackTrace();
		} finally {
			entityManager.close();
		}

	}

	public void totalBill() {

		EntityManagerFactory entityManagerFactory = null;
		EntityManager entityManager = null;
		EntityTransaction transaction = null;
		Scanner sc = new Scanner(System.in);
		try {
			entityManagerFactory = Persistence.createEntityManagerFactory("TestPersistence");
			entityManager = entityManagerFactory.createEntityManager();
			transaction = entityManager.getTransaction();
			transaction.begin();
			String query = " select sum(price) from Hotel_Bill";
			Query query1 = entityManager.createQuery(query);
			List<Double> rs = query1.getResultList();

			for (Double hb : rs) {

				System.out.println("Item Price: " + hb);
				System.out.println("************************");
			}

		} catch (Exception e) {
			transaction.rollback();
			e.printStackTrace();
		} finally {
			entityManager.close();
		}

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:631)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3114)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1438)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:391)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1145)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1322)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2019-09-21 15:03:18.417
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:631)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3114)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1438)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:391)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1145)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1322)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2019-09-21 15:03:18.605
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:631)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3114)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1438)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:391)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1145)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1322)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)
!SESSION 2019-09-21 15:05:41.217 -----------------------------------------------
eclipse.buildId=4.12.0.I20190605-1800
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.core.resources 2 10035 2019-09-21 15:06:01.669
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.egit.core 1 0 2019-09-21 15:06:10.216
!MESSAGE Using Apache MINA sshd as ssh client.

!ENTRY org.eclipse.egit.ui 2 0 2019-09-21 15:06:38.927
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Sukanya'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2019-09-21 15:36:39.684 -----------------------------------------------
eclipse.buildId=4.12.0.I20190605-1800
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.egit.core 1 0 2019-09-21 15:36:55.621
!MESSAGE Using Apache MINA sshd as ssh client.

!ENTRY org.eclipse.egit.ui 2 0 2019-09-21 15:37:13.822
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Sukanya'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2019-09-21 15:54:54.174 -----------------------------------------------
eclipse.buildId=4.12.0.I20190605-1800
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.egit.core 1 0 2019-09-21 15:55:09.205
!MESSAGE Using Apache MINA sshd as ssh client.

!ENTRY org.eclipse.egit.ui 2 0 2019-09-21 15:55:21.825
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Sukanya'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
